if(Utils){(function(){var g=Utils.is.nodeLike,d=Utils.is.hostObject,n=Utils.is.arrayLike;function i(s,p,r){var q="insertBefore",o=null;if(g(s)&&g(p)&&g(r)){if(d(s[q])){o=s[q](p,r)}}return o}function j(s,t,r){var q,p,u,o;if(n(t)){q=t.length-1;for(p=q;p>-1;p-=1){u=q-p;i(s,t[u],r)}}return o}function e(q,r){var p="appendChild",o=null;if(g(q)&&g(r)){if(d(q[p])){o=q[p](r)}}return o}function b(r,s){var q,p,t,o;if(n(s)){q=s.length-1;for(p=q;p>-1;p-=1){t=q-p;e(r,s[t])}}return o}function l(q,r){var p="removeChild",o=null;if(g(q)&&g(r)){if(d(q[p])){o=q[p](r)}}return o}function h(s,q,p){var r="replaceChild",o=null;if(g(s)&&g(q)&&g(p)){if(d(s[r])){o=s[r](q,p)}}return o}function c(r,p){var q="cloneNode",o=null;if(g(r)){if(d(r[q])){o=r[q](r,p)}}return o}function m(p){var o=false;if(g(p)){o=typeof p.nodeName==="string"}return o}function a(s,q){var r="toLowerCase",p="toUpperCase",o=null;if(m(s)){o=s.nodeName;if(q){o=o[r]()}else{if(!q){o=o[p]()}}}return o}function k(p){var o=false;if(g(p)){o=typeof p.nodeValue==="string"}return o}function f(p){var o=null;if(k(p)){o=p.nodeValue}return o}Utils.node=Utils.node||{prepend:i,prependList:j,append:e,appendList:b,remove:l,replace:h,clone:c,name:a,value:f}}())};