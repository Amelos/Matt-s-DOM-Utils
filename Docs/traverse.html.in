@BEGIN@
@HEAD@
		<title>Matt's DOM Utils (@LIBRARY_NAME@): Documentation&mdash;@LIBRARY_NAME@.traverse</title>
@DOCS_STYLESHEET@
@DOCS_RESOURCES@
		<link href="classes.html" hreflang="en" media="all"
			rel="prev" title="@LIBRARY_NAME@.classes"
			type="text/html">
		<link href="./" hreflang="en" media="all"
			rel="index" title="Documentation Index"
			type="text/html">
		<link href="select.html" hreflang="en" media="all"
			rel="next" title="@LIBRARY_NAME@.select"
			type="text/html">
@BODY@
@DOCS_HEADER@
@DOCS_NAV@
		<div class="primary_row row">
			<div class="cell prev_link primary_cell">
				<a href="classes.html" rel="prev"
					title="Previous">&larr;<code>@LIBRARY_NAME@.classes</code></a>
			</div>
			<div class="cell next_link primary_cell">
				<a href="select.html" rel="next"
					title="Next"><code>@LIBRARY_NAME@.select</code>&rarr;</a>
			</div>
		</div>
		<div class="primary_row row">
			<div class="cell primary_cell">
				<h2 class="heading" title="@LIBRARY_NAME@.traverse">
					<code>@LIBRARY_NAME@.traverse</code>
				</h2>
				<div class="module_info" id="dependencies">
					<h3 class="heading">
						<a href="#dependencies"
							title="Dependencies">Dependencies</a>
					</h3>
					<ol>
						<li>
							<a href="./types.html"
								title="@LIBRARY_NAME@.types"><code>@LIBRARY_NAME@.types</code></a>
						</li>
						<li>
							<a href="./is.html"
								title="@LIBRARY_NAME@.is"><code>@LIBRARY_NAME@.is</code></a>
						</li>
						<li>
							<a href="./helpers.html"
								title="@LIBRARY_NAME@.helpers"><code>@LIBRARY_NAME@.helpers</code></a>
						</li>
						<li>
							<a href="./node.html"
								title="@LIBRARY_NAME@.node"><code>@LIBRARY_NAME@.node</code></a>
						</li>
						<li>
							<a href="./create.html"
								title="@LIBRARY_NAME@.create"><code>@LIBRARY_NAME@.create</code></a>
						</li>
					</ol>
				</div>
			</div>
		</div>
		<ul class="doc_row row">
			<li class="cell doc_cell doc_entry" id="get_nodes">
				<h3 class="heading">
					<a href="#get_nodes"
						title="@LIBRARY_NAME@.traverse.getNodes"><code>@LIBRARY_NAME@.traverse.getNodes</code></a>
				</h3>
				@DOCS_HOST_DETECTION_WARNING@
				<pre class="example">
var nodes;
if (@LIBRARY_NAME@.traverse.getNodes) {
	nodes = @LIBRARY_NAME@.traverse.getNodes(
		document.body
	);
}</pre>
				<p class="doc_art function_head">function (<var>obj</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that traverses a <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						child nodes and collects them in a &ldquo;static&rdquo;
						<a href="glossary.html#array_like_object"
							title="Array-like Object">array-like object</a>.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array || null</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="linear">
				<h3 class="heading">
					<a href="#linear"
						title="@LIBRARY_NAME@.traverse.linear"><code>@LIBRARY_NAME@.traverse.linear</code></a>
				</h3>
				@DOCS_FILTER_INSTRUCTIONS@
				<p class="doc_art function_head">function (<var>obj</var>, <var>callback</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that traverses an 
						<a href="glossary.html#array_like_object"
							title="Array-like Object">array-like object</a>,
						calling a callback on each item.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						An <a href="glossary.html#array_like_object"
							title="Array-like Object">array-like object</a>.
					</dd>
					<dt>
						<var>callback</var>
					</dt>
					<dd>
						A function to be used as a callback.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="nodes">
				<h3 class="heading">
					<a href="#nodes"
						title="@LIBRARY_NAME@.traverse.nodes"><code>@LIBRARY_NAME@.traverse.nodes</code></a>
				</h3>
				@DOCS_FILTER_INSTRUCTIONS@
				<p class="doc_art function_head">function (<var>obj</var>, <var>callback</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that traverses a <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						child nodes and calls a callback with the
						current node passed.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					<dt>
						<var>callback</var>
					</dt>
					<dd>
						A function to be used as a callback.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="clear_nodes">
				<h3 class="heading">
					<a href="#clear_nodes"
						title="@LIBRARY_NAME@.traverse.clearNodes"><code>@LIBRARY_NAME@.traverse.clearNodes</code></a>
				</h3>
				<p class="doc_art function_head">function (<var>obj</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that traverses a <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						child nodes and removes them.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array || null</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="get_elements">
				<h3 class="heading">
					<a href="#get_elements"
						title="@LIBRARY_NAME@.traverse.getElements"><code>@LIBRARY_NAME@.traverse.getElements</code></a>
				</h3>
				@DOCS_FILTER_INSTRUCTIONS@
				@DOCS_HOST_DETECTION_WARNING@
				<pre class="example">
var children;
if (@LIBRARY_NAME@.traverse.getElements) {
	children = @LIBRARY_NAME@.traverse.getElements(
		document.body
	);
}</pre>
				<p class="doc_art function_head">function (<var>obj</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that traverses a <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						&ldquo;children&rdquo; and collects them in a &ldquo;static&rdquo;
						array.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					<dt>
						<var>callback</var>
					</dt>
					<dd>
						A function to be used as a callback.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array || null</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="elements">
				<h3 class="heading">
					<a href="#elements"
						title="@LIBRARY_NAME@.traverse.elements"><code>@LIBRARY_NAME@.traverse.elements</code></a>
				</h3>
				@DOCS_FILTER_INSTRUCTIONS@
				<p class="doc_art function_head">function (<var>obj</var>, <var>callback</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that traverses a <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						&ldquo;children&rdquo; and calls a callback with the
						current node passed.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					<dt>
						<var>callback</var>
					</dt>
					<dd>
						A function to be used as a callback.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="clear_elements">
				<h3 class="heading">
					<a href="#clear_elements"
						title="@LIBRARY_NAME@.traverse.clearElements"><code>@LIBRARY_NAME@.traverse.clearElements</code></a>
				</h3>
				<p class="doc_art function_head">function (<var>obj</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that traverses a <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						&ldquo;children&rdquo; and removes them.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array || null</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="get_node_tree">
				<h3 class="heading">
					<a href="#get_node_tree"
						title="@LIBRARY_NAME@.traverse.getNodeTree"><code>@LIBRARY_NAME@.traverse.getNodeTree</code></a>
				</h3>
				<p class="doc_art function_head">function (<var>obj</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that recursively traverses a
						<a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						<a href="glossary.html#subtree"
							title="Subtree">subtree</a>,
						collecting each
						<a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>
						in the <a href="glossary.html#array_like_object"
							title="Array-like Object">array-like object</a>.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array || null</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="node_tree">
				<h3 class="heading">
					<a href="#node_tree"
						title="@LIBRARY_NAME@.traverse.nodeTree"><code>@LIBRARY_NAME@.traverse.nodeTree</code></a>
				</h3>
				@DOCS_FILTER_INSTRUCTIONS@
				<p class="doc_art function_head">function (<var>obj</var>, <var>callback</var>, <var>result</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that traverses a <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						<a href="glossary.html#subtree"
							title="Subtree">subtree</a>,
						calling a callback on
						each <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>
						in the <a href="glossary.html#array_like_object"
							title="Array-like Object">array-like object</a>.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						An <a href="glossary.html#array_like_object"
							title="Array-like Object">array-like object</a>.
					</dd>
					<dt>
						<var>callback</var>
					</dt>
					<dd>
						A function to be used as a callback.
					</dd>
					<dt>
						<var>result</var>
					</dt>
					<dd>
						An optional parameter used to override
						the initial return value (<code>[]</code>);
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="get_text">
				<h3 class="heading">
					<a href="#get_text"
						title="@LIBRARY_NAME@.traverse.getText"><code>@LIBRARY_NAME@.traverse.getText</code></a>
				</h3>
				<p class="doc_art function_head">function (<var>obj</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that collects text node data
						from a <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						<a href="glossary.html#subtree"
							title="Subtree">subtree</a>,
						and returns the concatenated data.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>String || null</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="set_text">
				<h3 class="heading">
					<a href="#set_text"
						title="@LIBRARY_NAME@.traverse.setText"><code>@LIBRARY_NAME@.traverse.setText</code></a>
				</h3>
				<p class="doc_art function_head">function (<var>obj</var>, <var>text</var>, <var>doc</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that clears a <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						<a href="glossary.html#subtree"
							title="Subtree">subtree</a>,
						tree and replaces it with a
						text node containing the string provided.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					<dt>
						<var>text</var>
					</dt>
					<dd>
						A string that will be provided to a
						text node, which will in turn replace
						a <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						<code>childNodes</code> tree.
					</dd>
					<dt>
						<var>doc</var>
					</dt>
					<dd>
						A document <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>String || null</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="recursive">
				<h3 class="heading">
					<a href="#recursive"
						title="@LIBRARY_NAME@.traverse.recursive"><code>@LIBRARY_NAME@.traverse.recursive</code></a>
				</h3>
				@DOCS_FILTER_INSTRUCTIONS@
				<p class="doc_art function_head">function (<var>obj</var>, <var>callback</var>, <var>result</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that recursively traverses an
						<a href="glossary.html#array_like_object"
							title="Array-like Object">array-like object</a>,
						calling a callback on each item.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						An <a href="glossary.html#array_like_object"
							title="Array-like Object">array-like object</a>.
					</dd>
					<dt>
						<var>callback</var>
					</dt>
					<dd>
						A function to be used as a callback.
					</dd>
					<dt>
						<var>result</var>
					</dt>
					<dd>
						An optional parameter used to override
						the initial return value (<code>[]</code>);
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="get_element_tree">
				<h3 class="heading">
					<a href="#get_element_tree"
						title="@LIBRARY_NAME@.traverse.getElementTree"><code>@LIBRARY_NAME@.traverse.getElementTree</code></a>
				</h3>
				<p class="doc_art function_head">function (<var>obj</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that recursively traverses a
						<a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						<a href="glossary.html#subtree"
							title="Subtree">subtree</a>,
						collecting each element
						<a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>
						in the <a href="glossary.html#array_like_object"
							title="Array-like Object">array-like object</a>.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array || null</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="element_tree">
				<h3 class="heading">
					<a href="#element_tree"
						title="@LIBRARY_NAME@.traverse.elementTree"><code>@LIBRARY_NAME@.traverse.elementTree</code></a>
				</h3>
				@DOCS_FILTER_INSTRUCTIONS@
				<p class="doc_art function_head">function (<var>obj</var>, <var>callback</var>, <var>result</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that traverses a <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>'s
						<a href="glossary.html#subtree"
							title="Subtree">subtree</a>,
						calling a callback on
						each element <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>
						in the <a href="glossary.html#array_like_object"
							title="Array-like Object">array-like object</a>.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						An <a href="glossary.html#array_like_object"
							title="Array-like Object">array-like object</a>.
					</dd>
					<dt>
						<var>callback</var>
					</dt>
					<dd>
						A function to be used as a callback.
					</dd>
					<dt>
						<var>result</var>
					</dt>
					<dd>
						An optional parameter used to override
						the initial return value (<code>[]</code>);
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="get_ancestors">
				<h3 class="heading">
					<a href="#get_ancestors"
						title="@LIBRARY_NAME@.traverse.getAncestors"><code>@LIBRARY_NAME@.traverse.getAncestors</code></a>
				</h3>
				<p class="doc_art function_head">function (<var>obj</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that traverses the parent nodes
						of a <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>
						and shapes them into a linked list.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Object || null</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="is_ancestor">
				<h3 class="heading">
					<a href="#is_ancestor"
						title="@LIBRARY_NAME@.traverse.isAncestor"><code>@LIBRARY_NAME@.traverse.isAncestor</code></a>
				</h3>
				<p class="doc_art function_head">function (<var>par</var>, <var>obj</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that checks if a
						<a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>
						is an ancestor of another <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					<dt>
						<var>par</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>
						to be checked.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>
						to be used to generate
						an ancestral list and searched.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Boolean</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="list">
				<h3 class="heading">
					<a href="#list"
						title="@LIBRARY_NAME@.traverse.linkedList"><code>@LIBRARY_NAME@.traverse.linkedList</code></a>
				</h3>
				@DOCS_FILTER_INSTRUCTIONS@
				<p class="doc_art function_head">function (<var>list</var>, <var>callback</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that traverses a linked list
						and calls a callback with the current
						node passed.
					</dd>
					<dt>
						<var>list</var>
					</dt>
					<dd>
						A linked list.
					</dd>
					<dt>
						<var>callback</var>
					</dt>
					<dd>
						A function to be used as a callback.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
			<li class="cell doc_cell doc_entry" id="ancestors">
				<h3 class="heading">
					<a href="#ancestors"
						title="@LIBRARY_NAME@.traverse.ancestors"><code>@LIBRARY_NAME@.traverse.ancestors</code></a>
				</h3>
				@DOCS_FILTER_INSTRUCTIONS@
				<p class="doc_art function_head">function (<var>obj</var>, <var>callback</var>) {</p>
				<dl class="doc_list">
					@DOCS_DESCRIPTION@
					<dd>
						Method that traverses a linked list
						of a node's parent nodes and calls a
						callback with the current node passed.
					</dd>
					<dt>
						<var>obj</var>
					</dt>
					<dd>
						A <a href="glossary.html#node_like_object"
							title="Node-like Object">node-like object</a>.
					</dd>
					<dt>
						<var>callback</var>
					</dt>
					<dd>
						A function to be used as a callback.
					</dd>
					@DOCS_RETURN_VALUE@
					<dd>
						<code>Array</code>
					</dd>
				</dl>
				<p class="doc_art function_tail">}</p>
			</li>
		</ul>
		<div class="primary_row row">
			<div class="cell prev_link primary_cell">
				<a href="classes.html" rel="prev"
					title="Previous">&larr;<code>@LIBRARY_NAME@.classes</code></a>
			</div>
			<div class="cell index_link primary_cell">
				<a href="./" rel="index"
					title="Up">&uarr;Back to Documentation Index</a>
			</div>
			<div class="cell next_link primary_cell">
				<a href="select.html" rel="next"
					title="Next"><code>@LIBRARY_NAME@.select</code>&rarr;</a>
			</div>
		</div>
@FOOTER@
@END@
